  
  String.prototype.trim = function()
			{
				// 用正则表达式将前后空格
				// 用空字符串替代。
				return this.replace(/(^\s*)|(\s*$)/g, "");
			}


			function StringToDate(DateString){
				
				var ls_Date=DateString;
				
				
				var r, re;
				var strQuote;
				
				re = / /i;            // 创建正则表达式模式。
   				r = ls_Date.search(re);            // 查找字符串。

				if (r==-1) {
					str_1=ls_Date;
				}else{
					var str_1=ls_Date.substr(0,r)
					var str_2=ls_Date.substr(r,ls_Date.length-r)
					str_2=str_2.trim();
					
					re = /:/g;      
	   				str_2 = str_2.replace(re, ",");
	   				strQuote = ",";
	   				var arrTime = str_2.split(strQuote);
				}
				
				re = /-/g;             
				str_1 = str_1.replace(re, ",");   

				re = /\//g;             
   				str_1 = str_1.replace(re, ",");

				strQuote = ",";
				
				var arrDate = str_1.split(strQuote);
				
				if (arrDate.length>2) {
					if (arrTime) 
					{
						if (arrTime.length==0)
						{
							var newDate=new Date(arrDate[0],arrDate[1],arrDate[2]);
						}
						if (arrTime.length==1)
						{
							var newDate=new Date(arrDate[0],arrDate[1],arrDate[2],arrTime[0]);
						}
						if (arrTime.length==2)
						{
							var newDate=new Date(arrDate[0],arrDate[1],arrDate[2],arrTime[0],arrTime[1]);
						}
						if (arrTime.length>2)
						{
							var newDate=new Date(arrDate[0],arrDate[1],arrDate[2],arrTime[0],arrTime[1],arrTime[2]);
						}
					}else{
						var newDate=new Date(arrDate[0],arrDate[1],arrDate[2])
					}
				}
				
				if (newDate) {
						if (isNaN(newDate)) {
							return false;
						}else{
							return newDate
						}
					}else{
						return false
					}

			}


			function IsDate(DateValue) {
				newDate=StringToDate(DateValue);
				if (newDate) {
					return true;
				}else{
					return false;
				}
			}
			
			
			function m_GetDateByDays2Now(Days2Now) {
				var now = new Date();
				return DateAdd("d", -Days2Now,now);
			}
			
			function DateAdd(timeU,byMany,dateObj) {
				var millisecond=1;
				var second=millisecond*1000;
				var minute=second*60;
				var hour=minute*60;
				var day=hour*24;
				var year=day*365;
			
				var newDate;
				var dVal=dateObj.valueOf();
				switch(timeU) {
					case "ms": newDate=new Date(dVal+millisecond*byMany); break;
					case "s": newDate=new Date(dVal+second*byMany); break;
					case "mi": newDate=new Date(dVal+minute*byMany); break;
					case "h": newDate=new Date(dVal+hour*byMany); break;
					case "d": newDate=new Date(dVal+day*byMany); break;
					case "y": newDate=new Date(dVal+year*byMany); break;
				}
				return newDate;
			}

			var gdCurDate = new Date();

			var giYear = gdCurDate.getFullYear();
			var giMonth = gdCurDate.getMonth()+1;

			var giDay = gdCurDate.getDate();

			var gdCtrl = new Object();
			var goSelectTag = new Array();
			var gcGray = "#808080";
			var gcToggle = "#ffff00";
			var gcBG = "#FFFFFF";
			var previousObject = null;

			var gdNowDate = new Date();
			var gNowYear = gdNowDate.getFullYear();
			var gNowMonth = gdNowDate.getMonth()+1;
			var gNowDay = gdNowDate.getDate();
			
			var gNiYear = 0;
			var gNiMonth = 0;
			var gNiDay = 0;

			var gCalMode = "";
			var gCalDefDate = "";

			var CAL_MODE_NOBLANK = "2";
			var last_ClickObj="";
			var last_CellFontColor="";
			var Flag_G2N="1";
			var Flag_N2G="";
			var dlg_BeginYear=1901
			
			function fSetDate(iYear, iMonth, iDay){
				if ((iYear == 0) && (iMonth == 0) && (iDay == 0)){
  					gdCtrl.value = "";
				}else{
  					iMonth = iMonth + 100 + "";
  					iMonth = iMonth.substring(1);
  					iDay   = iDay + 100 + "";
  					iDay   = iDay.substring(1);
  					gdCtrl.value = iYear+"-"+iMonth+"-"+iDay;
				}
				  
				for (i in goSelectTag)
  					goSelectTag[i].style.visibility = "visible";
				goSelectTag.length = 0;
				
				giYear = iYear;
				giMonth = iMonth;
				giDay = iDay;
				
				SetDays2Now(iYear, iMonth, iDay)
				
				if (Flag_N2G=="1") {
					Flag_G2N="1";
					Flag_N2G="";
				}else{
					Flag_G2N="1";

					var DataArray=G2N(iYear,iMonth,iDay)  
					gNiYear = DataArray[0];
					gNiMonth = DataArray[1];
					gNiDay = DataArray[2];
					set_N(DataArray[0],DataArray[1],DataArray[2])			
				}

			}

			function HiddenDiv()
				{
					var i;
				VicPopCal.style.visibility = "hidden";
				for (i in goSelectTag)
  					goSelectTag[i].style.visibility = "visible";
				goSelectTag.length = 0;

				}
			function fSetSelected(aCell){
				var iOffset = 0;
				var iYear = parseInt(getdocobj("tbSelYear").value);
				var iMonth = parseInt(getdocobj("tbSelMonth").value);
				
				with (aCell.children["cellText"]){
  					var iDay = parseInt(innerText);

  					if (color==gcGray)
						iOffset = (Victor<10)?-1:1;

					/*** below temp patch by maxiang ***/
					if( color == gcGray ){
						iOffset = (iDay < 15 )?1:-1;
					}
					/*** above temp patch by maxiang ***/

					iMonth += iOffset;
					if (iMonth<1) {
						iYear--;
						iMonth = 12;
					}else if (iMonth>12){
						iYear++;
						iMonth = 1;
					}
				}
				
				if (last_ClickObj!="") {
					last_ClickObj.style.backgroundColor = gcBG
					last_ClickObj.color=last_CellFontColor
				}
				
				last_ClickObj=aCell.children["cellText"]
				last_CellFontColor=aCell.children["cellText"].color
				
				aCell.children["cellText"].style.backgroundColor = "#0A246A";
				aCell.children["cellText"].color="#FFFFFF";
				
				giDay=iDay
				
				fSetDate(parseInt(iYear), parseInt(iMonth), parseInt(iDay));
			}

			function Point(iX, iY){
				this.x = iX;
				this.y = iY;
			}

			function fBuildCal(iYear, iMonth) {
			var aMonth=new Array();
			for(i=1;i<7;i++)
  				aMonth[i]=new Array(i);
			  
			var dCalDate=new Date(iYear, iMonth-1, 1);
			var iDayOfFirst=dCalDate.getDay();
			var iDaysInMonth=new Date(iYear, iMonth, 0).getDate();
			var iOffsetLast=new Date(iYear, iMonth-1, 0).getDate()-iDayOfFirst+1;
			var iDate = 1;
			var iNext = 1;

			for (d = 0; d < 7; d++)
				aMonth[1][d] = (d<iDayOfFirst)?-(iOffsetLast+d):iDate++;
			for (w = 2; w < 7; w++)
  				for (d = 0; d < 7; d++)
					aMonth[w][d] = (iDate<=iDaysInMonth)?iDate++:-(iNext++);
			return aMonth;
			}

			function fDrawCal(iYear, iMonth, iCellHeight, sDateTextSize) {
			var WeekDay = new Array("日","一","二","三","四","五","六");
			  
			var styleWeekTD = " bgcolor='"+gcBG+"' borderwidth='0' bordercolor='"+gcBG+"'  valign='middle' align='center' height='"+iCellHeight+"' style='font-size:9pt; BORDER-BOTTOM: #000000 1px solid;BORDER-LEFT: #000000 0px solid;BORDER-RIGHT: #000000 0px solid;BORDER-TOP: #000000 0px solid; ";
			var styleTD = " bgcolor='"+gcBG+"' borderwidth='0' bordercolor='"+gcBG+"'  valign='middle' align='center' height='"+iCellHeight+"' style='font-size:9pt; ";
			
			var ls_htmlstr = "";
			  	
			ls_htmlstr += ("<tr>");
			for(i=0; i<7; i++)
				ls_htmlstr += ("<td "+styleWeekTD+" color:#0A246A' >" + WeekDay[i] + "</td>");
			ls_htmlstr += ("</tr>");

  			for (w = 1; w < 7; w++) {
				ls_htmlstr += ("<tr>");
				for (d = 0; d < 7; d++) {
					ls_htmlstr += ("<td id=calCell "+styleTD+"cursor:hand;' onclick='fSetSelected(this)'>");
					ls_htmlstr += ("<font id=cellText ></font>");
					ls_htmlstr += ("</td>")
				}
				ls_htmlstr += ("</tr>");
			}
			
			
				return ls_htmlstr;
			}

			function fUpdateCal(iYear, iMonth) {
			myMonth = fBuildCal(iYear, iMonth);
			var i = 0;
			for (w = 0; w < 6; w++)
				for (d = 0; d < 7; d++)
					with (cellText[(7*w)+d]) {
						Victor = i++;
						if (myMonth[w+1][d]<0) {
							color = gcGray;
							innerText = -myMonth[w+1][d];
						}else{
							// Modified by maxiang for we need 
							// Saturday displayed in blue font color.
							//color = ((d==0)||(d==6))?"red":"black";
						
							style.backgroundColor=""
							if( d == 0 ){
								color = "red";
							}else if( d == 6 ){
								color = "blue";
							}else{
								color = "black";
							}
						
						
							var m_iMonthMaxDay=MonthMaxDay(parseInt(iYear),parseInt(iMonth))
							if (giDay>m_iMonthMaxDay) giDay=parseInt(m_iMonthMaxDay);
							
							if (giDay==myMonth[w+1][d]) {
								if (last_ClickObj!="") {
									last_ClickObj.style.backgroundColor = gcBG
									last_ClickObj.color=last_CellFontColor
								}
								
								last_ClickObj=cellText[(7*w)+d]
								last_CellFontColor= color
				
								style.backgroundColor="#0A246A"
								color="white";
								//alert(iMonth);
								
								//alert(giDay+"-maxday="+m_iMonthMaxDay)
								
								fSetDate(parseInt(iYear),parseInt(iMonth),parseInt(giDay));
							}
						
							// End of above maxiang
							innerText = myMonth[w+1][d];
						}
					}
			}
			
			function MonthMaxDay(m_iYear,m_iMonth){
				if (m_iMonth==2) {
					if (IsLeapYear(m_iYear)) 
						{
							return 29;
						}else{
							return 28;
						}
				}else{
					if (m_iMonth==1 || m_iMonth==3 ||  m_iMonth==5 || m_iMonth==7 || m_iMonth==8 || m_iMonth==10 ||  m_iMonth==12)
						{
							return 31;
						}else{
							return 30;
						}
				}
			}

			function getdocobj(id){
				return document.all[id];
			}
			function fSetYearMon(iYear, iMon){
			getdocobj("tbSelMonth").options[iMon-1].selected = true;
			for (i = 0; i < getdocobj("tbSelYear").length; i++)
				if (getdocobj("tbSelYear").options[i].value == iYear)
					getdocobj("tbSelYear").options[i].selected = true;
			fUpdateCal(iYear, iMon);
			}

			function fPrevMonth(){
			var iMon = getdocobj("tbSelMonth").value;
			var iYear = getdocobj("tbSelYear").value;
			  
			if (--iMon<1) {
				iMon = 12;
				iYear--;
			}
			  
			fSetYearMon(iYear, iMon);
			}

			function fNextMonth(){
			var iMon = getdocobj("tbSelMonth").value;
			var iYear = getdocobj("tbSelYear").value;
			  
			if (++iMon>12) {
				iMon = 1;
				iYear++;
			}
			  
			fSetYearMon(iYear, iMon);
			}

			function fToggleTags(){
			with (document.all.tags("SELECT")){
 				for (i=0; i<length; i++)
 					if ((item(i).Victor!="Won")&&fTagInBound(item(i))){
 						item(i).style.visibility = "hidden";
 						goSelectTag[goSelectTag.length] = item(i);
 					}
			}
			}

			function fTagInBound(aTag){
			with (VicPopCal.style){
  				var l = parseInt(left);
  				var t = parseInt(top);
  				var r = l+parseInt(width);
  				var b = t+parseInt(height);
				var ptLT = fGetXY(aTag);
				return !((ptLT.x>r)||(ptLT.x+aTag.offsetWidth<l)||(ptLT.y>b)||(ptLT.y+aTag.offsetHeight<t));
			}
			}

			function fGetXY(aTag){
			var oTmp = aTag;
			var pt = new Point(0,0);
			do {
  				pt.x += oTmp.offsetLeft;
  				pt.y += oTmp.offsetTop;
  				oTmp = oTmp.offsetParent;
			} while(oTmp.tagName!="BODY");
			return pt;
			}

			// Main: popCtrl is the widget beyond which you want this calendar to appear;
			//       dateCtrl is the widget into which you want to put the selected date.
			// i.e.: <input type="text" name="dc" style="text-align:center" readonly><input type="button" value="V" onclick="fPopCalendar(dc,dc);return false">
			var IsPanelDrawed = false;
			var IsDrawPanelActionStarted = false;
			function DrawCalender(popCtrl, dateCtrl, mode, defDate){
				if (!IsDrawPanelActionStarted) {
					drawcalendarpanel();	
				}
				
				if (!IsPanelDrawed) {
					window.setTimeout(DrawCalenderCell(popCtrl, dateCtrl, mode, defDate),1000);			
				}else
				{
					fPopCalendar(popCtrl, dateCtrl, mode, defDate)
				}
				
			}
			function fPopCalendar(popCtrl, dateCtrl, mode, defDate){
					gCalMode = mode;
					gCalDefDate = defDate;
				
					
					if (popCtrl == previousObject){
	  						if (VicPopCal.style.visibility == "visible"){
  							//HiddenDiv();
  							return true;
  						}
					  	
					}
					previousObject = popCtrl;
					gdCtrl = dateCtrl;
					fSetYearMon(giYear, giMonth); 
					var point = fGetXY(popCtrl);

						if( gCalMode == CAL_MODE_NOBLANK ){
							d